# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget XComp::thundersvm)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target XComp::thundersvm
add_library(XComp::thundersvm SHARED IMPORTED)

set_target_properties(XComp::thundersvm PROPERTIES
  INTERFACE_LINK_LIBRARIES "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/lib/x64/cudart_static.lib;Threads::Threads;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/lib/x64/cusparse.lib;OpenMP::OpenMP_CXX"
)

# Import target "XComp::thundersvm" for configuration "Debug"
set_property(TARGET XComp::thundersvm APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(XComp::thundersvm PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/lib/Debug/thundersvm.lib"
  IMPORTED_LOCATION_DEBUG "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/bin/Debug/thundersvm.dll"
  )

# Import target "XComp::thundersvm" for configuration "Release"
set_property(TARGET XComp::thundersvm APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(XComp::thundersvm PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/lib/Release/thundersvm.lib"
  IMPORTED_LOCATION_RELEASE "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/bin/Release/thundersvm.dll"
  )

# Import target "XComp::thundersvm" for configuration "MinSizeRel"
set_property(TARGET XComp::thundersvm APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(XComp::thundersvm PROPERTIES
  IMPORTED_IMPLIB_MINSIZEREL "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/lib/MinSizeRel/thundersvm.lib"
  IMPORTED_LOCATION_MINSIZEREL "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/bin/MinSizeRel/thundersvm.dll"
  )

# Import target "XComp::thundersvm" for configuration "RelWithDebInfo"
set_property(TARGET XComp::thundersvm APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(XComp::thundersvm PROPERTIES
  IMPORTED_IMPLIB_RELWITHDEBINFO "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/lib/RelWithDebInfo/thundersvm.lib"
  IMPORTED_LOCATION_RELWITHDEBINFO "D:/Codes/python/Hierarchical Kernels in Deep Kernel Learning/Libs/thundersvm/build/bin/RelWithDebInfo/thundersvm.dll"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
